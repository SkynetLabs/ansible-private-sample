##############################################################################
#
# This hosts.ini file is used by ansible to define host names, variables, and
# groups to help with executing various ansible playbooks.
#
##############################################################################


# Define child groups of the global ansible webportals group with the
# [webportals:children] label.
#
# webportals is defined and used in the ansible-playbooks repo and should not
# be changed.
#
# Here in the hosts.ini file, you can define child groups of webportals here.
# In this example, we are defining a webportals_dev group and a webportals_prod
# group. These can be changed to whatever you would like.
[webportals:children]
webportals_dev
webportals_prod

# Define any common variables for the global webportals group with the
# [webportals:vars] label.
[webportals:vars]
# discord_ansible_logs_webhook can get set to enable logging ansible events
# into a discord server channel like #ansible-logs.
discord_ansible_logs_webhook=""

# ansible_become_pass is required to execute playbooks without root access
# using (become=True). It is Ansible internal variable and it is not lazy
# evaluated as user defined variables. We need to set default value for
# playbooks not requiring this var and not having active LastPass session.
# 
# ***DO NOT EDIT***
ansible_become_pass="{{ lookup('community.general.lastpass', webportal_user + '@' + ansible_host, field='password') if (lastpass_required|default(False)) else None}}"
webportal_user_pass_hash="{{ ansible_become_pass | password_hash('sha512', 65534 | random(seed=inventory_hostname) | string) }}"

# Define servers that make up the child groups.
#
# Here is and example of defining the servers that make up the webportals_dev
# group. The format is the following:
#
# name ansible_host=ip or domain 
[webportals_dev]
dev1 ansible_host=dev1.mydomain.com
dev2 ansible_host=123.123.123.123

# Define any common variables specific to the child group. Here is an example
# of defining a discord webhook specifically for the webportals_dev group.
[webportals_dev:vars]
discord_webhook_url=""

# You can future define groups using the `name` you gave a server and define
# variables specific to that sub group. 
[webportals_dev_cluster]
dev1
dev2

[webportals_dev_cluster:vars]
portal_cluster_id=dev-a

# Define servers that make up the child groups.
#
# Here is and example of defining the servers that make up the webportals_prod
# group. The format is the following:
#
# name ansible_host=ip or domain 
[webportals_prod]
as-hk-1 ansible_host=as-hk-1.mydomain.com
as-sp-1 ansible_host=123.123.123.123

# Define any common variables specific to the child group. Here is an example
# of defining a discord webhook specifically for the webportals_prod group.
[webportals_prod:vars]
discord_webhook_url=""
discord_mention_role_id=123
portal_cluster_id=prod

# webportals_takedown is a predefined variable that identifies servers that
# need to be taken down and not accessed publicly. When a server is taken down,
# skyd continues to run so that any files being pinned by that portal continue to
# be repaired and remain healthy on the network.
[webportals_takedown]

# out_of_LB is a predefined variable that identifies servers that should be
# out of the LB by disabling the health checks. This group should be used for
# things like reaching the contract size or file count limits for performance.
#
# The format is the following:
# name out_of_lb_message="reason string"
#
[out_of_LB]
as-hk-1 out_of_lb_message="contract size"
as-sp-1 out_of_lb_message="too many files"

# You can further define groups of servers using the `name` you gave each
# server. Here is an example of breaking servers into deploy batches. We have a
# depl_all group containing all the servers and then a depl_batch1 and a
# depl_batch2 to deploying to a certain group of servers.
[depl_all]
as-hk-1
as-sp-1

[depl_batch1]
as-hk-1

[depl_batch2]
as-sp-1

# There are a number of use cases, such as long running ansible playbooks where
# running them from a deploy machine is helpful. If you choose to use one, define
# it here. 
[deploy_machines]
depl ansible_host=depl.mydomain.com

# Define any deploy_machines variables here.
#
# DO NOTE CHANGE ansible_user
[deploy_machines:vars]
ansible_user=user

# If you need to define any global variables that apply to all groups and hosts
# that might not be in a group, they can be defined here.
#
# For example, defining an email to send tickets to:
# support_email=support@mydomain.com
#
# DO NOT EDIT ansible_python_interpreter
[all:vars]
ansible_python_interpreter=/usr/bin/python3
